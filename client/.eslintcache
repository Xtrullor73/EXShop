[{"C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\index.js":"1","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\store\\DeviceStore.js":"2","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\store\\UserStore.js":"3","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\components\\AppRouter.js":"4","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\components\\NavBar.js":"5","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\utils\\consts.js":"6","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\pages\\Basket.js":"7","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\pages\\Admin.js":"8","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\pages\\Shop.js":"9","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\pages\\DevicePage.js":"10","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\pages\\Auth.js":"11","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\components\\TypeBar.js":"12","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\components\\BrandBar.js":"13","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\components\\DeviceList.js":"14","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\components\\DeviceItem.js":"15","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\components\\modals\\CreateBrand.js":"16","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\components\\modals\\CreateType.js":"17","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\components\\modals\\CreateDevice.js":"18","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\App.js":"19","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\http\\userAPI.js":"20","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\http\\index.js":"21","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\http\\deviceAPI.js":"22","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\routes.js":"23","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\components\\Pages.js":"24"},{"size":439,"mtime":1640539032403,"results":"25","hashOfConfig":"26"},{"size":1359,"mtime":1640861733130,"results":"27","hashOfConfig":"26"},{"size":420,"mtime":1641504042272,"results":"28","hashOfConfig":"26"},{"size":795,"mtime":1641501946800,"results":"29","hashOfConfig":"26"},{"size":2111,"mtime":1640882194980,"results":"30","hashOfConfig":"26"},{"size":242,"mtime":1641501525354,"results":"31","hashOfConfig":"26"},{"size":167,"mtime":1641052883386,"results":"32","hashOfConfig":"26"},{"size":1589,"mtime":1640432450046,"results":"33","hashOfConfig":"26"},{"size":1593,"mtime":1640861614883,"results":"34","hashOfConfig":"26"},{"size":2445,"mtime":1640881971311,"results":"35","hashOfConfig":"26"},{"size":3116,"mtime":1640785920308,"results":"36","hashOfConfig":"26"},{"size":713,"mtime":1640786363442,"results":"37","hashOfConfig":"26"},{"size":758,"mtime":1640786442879,"results":"38","hashOfConfig":"26"},{"size":491,"mtime":1611985807000,"results":"39","hashOfConfig":"26"},{"size":1093,"mtime":1640786516553,"results":"40","hashOfConfig":"26"},{"size":1355,"mtime":1640807633877,"results":"41","hashOfConfig":"26"},{"size":1347,"mtime":1640809380230,"results":"42","hashOfConfig":"26"},{"size":6259,"mtime":1640855964497,"results":"43","hashOfConfig":"26"},{"size":860,"mtime":1641501939893,"results":"44","hashOfConfig":"26"},{"size":716,"mtime":1641504375942,"results":"45","hashOfConfig":"26"},{"size":428,"mtime":1640786177410,"results":"46","hashOfConfig":"26"},{"size":997,"mtime":1641380079295,"results":"47","hashOfConfig":"26"},{"size":810,"mtime":1640785637737,"results":"48","hashOfConfig":"26"},{"size":828,"mtime":1640860380954,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1hl7uzc",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\index.js",[],["104","105"],"C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\store\\DeviceStore.js",[],"C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\store\\UserStore.js",[],"C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\components\\NavBar.js",[],"C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\utils\\consts.js",[],"C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\pages\\Basket.js",["106"],"import React from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\n\r\nconst Basket = observer(() => {\r\n    // return (\r\n\r\n    // );\r\n});\r\n\r\nexport default Basket;","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\pages\\Admin.js",[],"C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\pages\\Shop.js",["107","108"],"import React, {useContext, useEffect} from 'react';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport BrandBar from \"../components/BrandBar\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Shop = observer(() => {\r\n    const {device} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n        fetchDevices(null, null, 1, 2).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 2).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [device.page, device.selectedType, device.selectedBrand])\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-2\">\r\n                <Col md={3}>\r\n                    <TypeBar/>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <BrandBar/>\r\n                    <DeviceList/>\r\n                    <Pages/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Shop;\r\n","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\pages\\DevicePage.js",["109"],"import React, {useEffect, useState} from 'react';\r\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\r\nimport bigStar from '../assets/big_star.png';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {fetchOneDevice} from \"../http/deviceAPI\";\r\n\r\nconst DevicePage = () => {\r\n    const [device, setDevice] = useState({info: []})\r\n    const {id} = useParams()\r\n    useEffect(() => {\r\n        fetchOneDevice(id).then(data => setDevice(data))\r\n    }, [])\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + device.img}/>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Row className=\"d-flex flex-column align-items-center\">\r\n                        <h2>{device.name}</h2>\r\n                        <div\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:240, height: 240, backgroundSize: 'cover', fontSize:64}}\r\n                        >\r\n                            {device.rating}\r\n                        </div>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card\r\n                        className=\"d-flex flex-column align-items-center justify-content-around\"\r\n                            style={{width: 300, height: 300, fontSize: 32, border: '5px solid lightgray'}}\r\n                    >\r\n                        <h3>От {device.price} руб.</h3>\r\n                        <Button\r\n                            variant={\"outline-dark\"}\r\n                            // onClick={(device) => addToBasket(device)}\r\n                        >\r\n                            Добавить в корзину</Button>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-column m-3\">\r\n                <h1>Характеристики</h1>\r\n                {device.info.map((info, index) =>\r\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\r\n                        {info.title}: {info.description}\r\n                    </Row>\r\n                )}\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default DevicePage;","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\pages\\Auth.js",["110"],"import React, {useContext, useState} from 'react';\r\nimport {Button, Card, Container, Form, Row} from \"react-bootstrap\";\r\nimport {NavLink, useHistory, useLocation} from \"react-router-dom\";\r\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\r\nimport {login, registration} from \"../http/userAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\n\r\nconst Auth = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const isLogin = location.pathname === LOGIN_ROUTE\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const click = async () => {\r\n        try {\r\n            let data;\r\n            if(isLogin) {\r\n                data = await login(email, password);\r\n            } else {\r\n                data = await registration(email, password);\r\n            }\r\n            user.setUser(user)\r\n            user.setIsAuth(true)\r\n            history.push(SHOP_ROUTE)\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container\r\n            className=\"d-flex justify-content-center align-items-center\"\r\n            style={{height: window.innerHeight - 54}}\r\n        >\r\n            <Card style={{width: 600}} className=\"p-5\">\r\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : 'Регистрация'}</h2>\r\n                <Form className=\"d-flex flex-column\">\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите ваш email...\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите ваш пароль...\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                    />\r\n\r\n                    <Button\r\n                        variant={\"outline-success\"}\r\n                        className=\"mt-3\"\r\n                        onClick={click}\r\n                    >\r\n                        {isLogin ? 'Войти' : 'Регистрация'}\r\n                    </Button>\r\n\r\n                    <Row className=\"d-flex justify-content-between mt-3\">\r\n                        {isLogin ?\r\n                            <div>\r\n                            Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйтесь!</NavLink>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                            Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\r\n                            </div>\r\n                        }\r\n                    </Row>\r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Auth;","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\components\\TypeBar.js",[],"C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\components\\BrandBar.js",[],"C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\components\\DeviceList.js",[],"C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\components\\DeviceItem.js",[],"C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\components\\modals\\CreateBrand.js",[],"C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\components\\modals\\CreateType.js",[],"C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\components\\modals\\CreateDevice.js",["111"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {Button, Col, Dropdown, Form, Modal, Row} from \"react-bootstrap\";\r\nimport {Context} from \"../../index\";\r\nimport {createDevice, fetchBrands, fetchTypes} from \"../../http/deviceAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst CreateDevice = observer(({show, onHide}) => {\r\n    const {device} = useContext(Context)\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [file, setFile] = useState(null)\r\n    const [info, setInfo] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n    }, [])\r\n\r\n    const addInfo = () => {\r\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\r\n    }\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number))\r\n    }\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\r\n    }\r\n    const selectFile = e => {\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const addDevice = () => {\r\n        const formData = new FormData()\r\n        formData.append('name', name)\r\n        formData.append('price', `${price}`)\r\n        formData.append('img', file)\r\n        formData.append('brandId', device.selectedBrand.id)\r\n        formData.append('typeId', device.selectedType.id)\r\n        formData.append('info', JSON.stringify(info))\r\n        createDevice(formData).then(onHide())\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            size=\"lg\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить устройство\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.types.map(type =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedType(type)}\r\n                                    key={type.id}\r\n                                >\r\n                                    {type.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите бренд\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.brands.map(brand =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedBrand(brand)}\r\n                                    key={brand.id}\r\n                                >\r\n                                    {brand.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n                    <Form.Control\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите название...\"\r\n                    />\r\n                    <Form.Control\r\n                        value={price}\r\n                        onChange={e => setPrice(Number(e.target.value))}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите стоимость...\"\r\n                        type=\"number\"\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={selectFile}\r\n                    />\r\n                    <hr/>\r\n                    <Button\r\n                        variant={\"outline-dark\"}\r\n                        onClick={addInfo}\r\n                    >\r\n                        Добавить характеристику\r\n                    </Button>\r\n                    {info.map(i =>\r\n                            <Row className=\"mt-4\" key={i.number}>\r\n                                <Col md={4}>\r\n                                    <Form.Control\r\n                                        value={i.title}\r\n                                        onChange={(e) => changeInfo('title', e.target.value, i.number)}\r\n                                        placeholder=\"Введите название...\"\r\n                                    />\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Form.Control\r\n                                        value={i.description}\r\n                                        onChange={(e) => changeInfo('description', e.target.value, i.number)}\r\n                                        placeholder=\"Введите описание...\"\r\n                                    />\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Button\r\n                                        onClick={() => removeInfo(i.number)}\r\n                                        variant={\"outline-danger\"}\r\n                                    >\r\n                                        Удалить\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        )}\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default CreateDevice;","C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\App.js",["112"],"C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\http\\userAPI.js",[],"C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\http\\index.js",[],"C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\http\\deviceAPI.js",[],"C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\routes.js",[],"C:\\Users\\Xtrul\\WebstormProjects\\online-shop\\client\\src\\components\\Pages.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":13},{"ruleId":"121","severity":1,"message":"122","line":23,"column":8,"nodeType":"123","endLine":23,"endColumn":10,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"122","line":30,"column":8,"nodeType":"123","endLine":30,"endColumn":64,"suggestions":"125"},{"ruleId":"121","severity":1,"message":"126","line":12,"column":8,"nodeType":"123","endLine":12,"endColumn":10,"suggestions":"127"},{"ruleId":"117","severity":1,"message":"128","line":23,"column":17,"nodeType":"119","messageId":"120","endLine":23,"endColumn":21},{"ruleId":"121","severity":1,"message":"122","line":17,"column":8,"nodeType":"123","endLine":17,"endColumn":10,"suggestions":"129"},{"ruleId":"121","severity":1,"message":"130","line":19,"column":8,"nodeType":"123","endLine":19,"endColumn":10,"suggestions":"131"},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.","ArrayExpression",["134"],["135"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["136"],"'data' is assigned a value but never used.",["137"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["138"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"139","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [device]",{"range":"148","text":"149"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"150","text":"151"},"Update the dependencies array to be: [id]",{"range":"152","text":"153"},{"range":"154","text":"149"},"Update the dependencies array to be: [user]",{"range":"155","text":"156"},[905,907],"[device]",[1144,1200],"[device.page, device.selectedType, device.selectedBrand, device]",[471,473],"[id]",[713,715],[641,643],"[user]"]